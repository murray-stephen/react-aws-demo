name: CI/CD Pipeline

on: [push, pull_request]

jobs:
  setup:
    runs-on: ubuntu-latest

    outputs:
      cache-hit: ${{ steps.cache.outputs.cache-hit }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: ./.github/actions/setup-node

  build:
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: ./.github/actions/setup-node

      - name: Run build
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: build

#  test:
#    runs-on: ubuntu-latest
#    needs: build
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Setup Node.js
#        uses: ./.github/actions/setup-node
#
#      - name: Run tests
#        run: npm test

  deploy:
    runs-on: ubuntu-latest
#    needs: [build, test]
    needs: [build]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-artifacts
          path: build

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'eu-west-1'

      - name: List S3 Buckets
        run: aws s3 ls

      - name: Sync to S3
        run: aws s3 sync ./build s3://test-react-app-public-access

      - name: Get CloudFront Distribution ID
        id: get_distribution_id
        run: |
          DISTRIBUTION_ID=$(aws cloudfront list-distributions \
            --query "DistributionList.Items[?Aliases.Items[?contains(@, 'd2zaexoz2l1ovi.cloudfront.net/')]].Id | [0]" \
            --output text)
          echo "Distribution ID: $DISTRIBUTION_ID"
          echo "::set-output name=distribution_id::$DISTRIBUTION_ID"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'eu-west-1'

      - name: Invalidate CloudFront Distribution
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ steps.get_distribution_id.outputs.distribution_id }} --paths "/*"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'eu-west-1'
